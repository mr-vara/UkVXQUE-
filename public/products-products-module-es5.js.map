{"version":3,"sources":["webpack:///src/app/products/add-edit.component.ts","webpack:///src/app/products/add-edit.component.html","webpack:///src/app/products/layout.component.ts","webpack:///src/app/products/layout.component.html","webpack:///src/app/products/list.component.ts","webpack:///src/app/products/list.component.html","webpack:///src/app/products/products-routing.module.ts","webpack:///src/app/products/products.module.ts"],"names":["AddEditComponent","formBuilder","route","router","productService","alertService","loading","submitted","id","snapshot","params","isAddMode","form","group","title","required","price","description","category","image","getById","pipe","subscribe","x","f","setValue","clear","invalid","createProduct","updateProduct","create","value","data","success","keepAfterRouteChange","navigate","relativeTo","error","update","controls","onSubmit","templateUrl","LayoutComponent","ListComponent","products","getAll","find","isDeleting","filter","routes","path","component","children","ProductsRoutingModule","forChild","imports","exports","ProductsModule","declarations"],"mappings":"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","file":"products-products-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ProductService, AlertService } from '@app/_services';\n\n@Component({ templateUrl: 'add-edit.component.html' })\nexport class AddEditComponent implements OnInit {\n    form: FormGroup;\n    id: string;\n    isAddMode: boolean;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private productService: ProductService,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.id = this.route.snapshot.params['id'];\n        this.isAddMode = !this.id;\n    \n        this.form = this.formBuilder.group({\n            title: ['', Validators.required],\n            price: ['', Validators.required],\n            description: ['', Validators.required],\n            category: ['', Validators.required],\n            image: ['', Validators.required]\n        });\n\n        if (!this.isAddMode) {\n            this.productService.getById(this.id)\n                .pipe(first())\n                .subscribe(x => {\n                    this.f.title.setValue(x.title);\n                    this.f.price.setValue(x.price);\n                    this.f.description.setValue(x.description);\n                    this.f.category.setValue(x.category);\n                    this.f.image.setValue(x.image);\n                });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        if (this.isAddMode) {\n            this.createProduct();\n        } else {\n            this.updateProduct();\n        }\n    }\n\n    private createProduct() {\n        this.productService.create(this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Product added successfully', { keepAfterRouteChange: true });\n                    this.router.navigate(['.', { relativeTo: this.route }]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n\n    private updateProduct() {\n        this.productService.update(this.id, this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                    this.router.navigate(['..', { relativeTo: this.route }]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}","<h1 *ngIf=\"isAddMode\">Add Product</h1>\n<h1 *ngIf=\"!isAddMode\">Edit Product</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"title\">Title</label>\n            <input type=\"text\" formControlName=\"title\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\" />\n            <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.title.errors.required\">Title is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"price\">Price</label>\n            <input type=\"text\" formControlName=\"price\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.price.errors }\" />\n            <div *ngIf=\"submitted && f.price.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.price.errors.required\">Price is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"description\">Description</label>\n            <input type=\"text\" formControlName=\"description\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" />\n            <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.description.errors.required\">Description is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"category\">Category</label>\n            <input type=\"text\" formControlName=\"category\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.category.errors }\" />\n            <div *ngIf=\"submitted && f.category.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.category.errors.required\">Category is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"image\">Image</label>\n            <input type=\"text\" formControlName=\"image\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.image.errors }\" />\n            <div *ngIf=\"submitted && f.image.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.image.errors.required\">Image is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Save\n        </button>\n        <a routerLink=\"/products\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent { }","<div class=\"p-4\">\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ProductService } from '@app/_services';\n\n@Component({ templateUrl: 'list.component.html' })\nexport class ListComponent implements OnInit {\n    products = null;\n\n    constructor(private productService: ProductService) {}\n\n    ngOnInit() {\n        this.productService.getAll()\n            .pipe(first())\n            .subscribe(products => this.products = products);\n    }\n\n    deleteProduct(id: string) {\n        const products = this.products.find(x => x.id === id);\n        products.isDeleting = true;\n        this.productService.delete(id)\n            .pipe(first())\n            .subscribe(() => {\n                this.products = this.products.filter(x => x.id !== id) \n            });\n    }\n}","<h1>Products</h1>\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add Product</a>\n<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th style=\"width: 30%\">Title</th>\n            <th style=\"width: 30%\">Price</th>\n            <th style=\"width: 30%\">Category</th>\n            <th style=\"width: 10%\"></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let product of products\">\n            <td>{{product.title}}</td>\n            <td>{{product.price}}</td>\n            <td>{{product.category}}</td>\n            <td style=\"white-space: nowrap\">\n                <a routerLink=\"edit/{{product.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\n                <button (click)=\"deleteProduct(product.id)\" class=\"btn btn-sm btn-danger btn-delete-product\" [disabled]=\"product.isDeleting\">\n                    <span *ngIf=\"product.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\n                    <span *ngIf=\"!product.isDeleting\">Delete</span>\n                </button>\n            </td>\n        </tr>\n        <tr *ngIf=\"!products\">\n            <td colspan=\"4\" class=\"text-center\">\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\n            </td>\n        </tr>\n    </tbody>\n</table>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: '', component: ListComponent },\n            { path: 'add', component: AddEditComponent },\n            { path: 'edit/:id', component: AddEditComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ProductsRoutingModule { }","/**\n * Product module which deals with all product related operations.\n */\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        ProductsRoutingModule\n    ],\n    declarations: [\n        LayoutComponent,\n        ListComponent,\n        AddEditComponent\n    ]\n})\nexport class ProductsModule { }"]}