{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_components/alert.component.ts","webpack:///src/app/_components/alert.component.html","webpack:///src/app/_components/index.ts","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_models/alert.ts","webpack:///src/app/_models/index.ts","webpack:///src/app/_models/product.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_services/account.service.ts","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/product.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/index.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","router","alertService","fade","alerts","alertSubscription","onAlert","subscribe","alert","message","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","find","classes","alertTypeClass","Success","Info","Warning","type","join","selector","templateUrl","AuthGuard","accountService","route","state","user","userValue","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","error","statusText","JwtInterceptor","isLoggedIn","token","isApiUrl","startsWith","apiUrl","clone","setHeaders","Authorization","Alert","init","Object","assign","AlertType","Product","User","AccountService","http","userSubject","JSON","parse","localStorage","getItem","asObservable","username","password","post","setItem","stringify","removeItem","value","AlertService","subject","defaultId","options","ProductService","product","get","params","put","accountModule","AccountModule","productsModule","ProductsModule","routes","path","component","canActivate","loadChildren","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","AppModule","provide","useClass","multi","declarations","providers","bootstrap","HomeComponent","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","/**\n * Alert Component: All alerts in the App is managed here.\n */\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Alert, AlertType } from '@app/_models';\nimport { AlertService } from '@app/_services';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    @Input() id = 'default-alert';\n    @Input() fade = true;\n\n    alerts: Alert[] = [];\n    alertSubscription: Subscription;\n    routeSubscription: Subscription;\n\n    constructor(private router: Router, private alertService: AlertService) { }\n\n    ngOnInit() {\n        // subscribe to new alert notifications\n        this.alertSubscription = this.alertService.onAlert(this.id)\n            .subscribe(alert => {\n                // clear alerts when an empty alert is received\n                if (!alert.message) {\n                    // filter out alerts without 'keepAfterRouteChange' flag\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n                    // remove 'keepAfterRouteChange' flag on the rest\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\n                    return;\n                }\n\n                // add alert to array\n                this.alerts.push(alert);\n\n                // auto close alert if required\n                if (alert.autoClose) {\n                    setTimeout(() => this.removeAlert(alert), 3000);\n                }\n           });\n\n        // clear alerts on location change\n        this.routeSubscription = this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                this.alertService.clear(this.id);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to avoid memory leaks\n        this.alertSubscription.unsubscribe();\n        this.routeSubscription.unsubscribe();\n    }\n\n    removeAlert(alert: Alert) {\n        // check if already removed to prevent error on auto close\n        if (!this.alerts.includes(alert)) return;\n\n        if (this.fade) {\n            // fade out alert\n            this.alerts.find(x => x === alert).fade = true;\n\n            // remove alert after faded out\n            setTimeout(() => {\n                this.alerts = this.alerts.filter(x => x !== alert);\n            }, 250);\n        } else {\n            // remove alert\n            this.alerts = this.alerts.filter(x => x !== alert);\n        }\n    }\n\n    cssClass(alert: Alert) {\n        if (!alert) return;\n\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n                \n        const alertTypeClass = {\n            [AlertType.Success]: 'alert alert-success',\n            [AlertType.Error]: 'alert alert-danger',\n            [AlertType.Info]: 'alert alert-info',\n            [AlertType.Warning]: 'alert alert-warning'\n        }\n\n        classes.push(alertTypeClass[alert.type]);\n\n        if (alert.fade) {\n            classes.push('fade');\n        }\n\n        return classes.join(' ');\n    }\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n    <span [innerHTML]=\"alert.message\"></span>\n</div>","export * from './alert.component';\n","/** \n * Authentication Guards for the routes which need Auth\n */\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.accountService.userValue;\n        if (user) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","/**\n * Error interceptor used in the app\n */\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.accountService.logout();\n            }\n            \n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';","/**\n * Authorization token interceptor\n */\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { AccountService } from '@app/_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add auth header with jwt if user is logged in and request is to the api url\n        const user = this.accountService.userValue;\n        const isLoggedIn = user && user.token;\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\n        if (isLoggedIn && isApiUrl) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${user.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","/**\n * Alert Model\n */\nexport class Alert {\n    id: string;\n    type: AlertType;\n    message: string;\n    autoClose: boolean;\n    keepAfterRouteChange: boolean;\n    fade: boolean;\n\n    constructor(init?:Partial<Alert>) {\n        Object.assign(this, init);\n    }\n}\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}","export * from './alert';\nexport * from './user';\nexport * from './product';","/**\n * Product model\n */\nexport class Product {\n    id: string;\n    title: string;\n    price: number;\n    description: string;\n    category?: string;\n    image: string;\n}","/**\n * User Model\n */\nexport class User {\n    id: string;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    token: string;\n}","/**\n * All user/auth/registration related API operations are served by this service.\n */\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n    private userSubject: BehaviorSubject<User>;\n    public user: Observable<User>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n        this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n    login(username, password) {\n        return this.http.post<User>(`${environment.apiUrl}/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n                this.userSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/account/login']);\n    }\n\n    register(user: User) {\n        return this.http.post(`${environment.apiUrl}/users/register`, user);\n    }\n}","/**\n * All alert related operations are served by this service.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Alert, AlertType } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<Alert>();\n    private defaultId = 'default-alert';\n\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n\n    // convenience methods\n    success(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n    }\n\n    error(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n    }\n\n    info(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n    }\n\n    warn(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n    }\n\n    // main alert method    \n    alert(alert: Alert) {\n        alert.id = alert.id || this.defaultId;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(id = this.defaultId) {\n        this.subject.next(new Alert({ id }));\n    }\n}","export * from './account.service';\nexport * from './product.service';\nexport * from './alert.service';\n","/**\n * All product related API operations are served by this service.\n */\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { Product } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductService {\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n\n    }\n\n    create(product: Product) {\n        return this.http.post(`${environment.apiUrl}/products`, product);\n    }\n\n    getAll() {\n        return this.http.get<Product[]>(`${environment.apiUrl}/products`);\n    }\n\n    getById(id: string) {\n        return this.http.get<Product>(`${environment.apiUrl}/products/${id}`);\n    }\n\n    update(id, params) {\n        return this.http.put(`${environment.apiUrl}/products/${id}`, params)\n            .pipe(map(x => {\n                return x;\n            }));\n    }\n\n    delete(id: string) {\n        return this.http.delete(`${environment.apiUrl}/products/${id}`)\n            .pipe(map(x => {\n                return x;\n            }));\n    }\n}","/** \n * All routes in the app is managed here.\n */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { AuthGuard } from './_helpers';\n\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\nconst productsModule = () => import('./products/products.module').then(x => x.ProductsModule);\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n    { path: 'products', loadChildren: productsModule, canActivate: [AuthGuard] },\n    { path: 'account', loadChildren: accountModule },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\nimport { AccountService } from './_services';\nimport { User } from './_models';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    user: User;\n\n    constructor(private accountService: AccountService) {\n        this.accountService.user.subscribe(x => this.user = x);\n    }\n\n    logout() {\n        this.accountService.logout();\n    }\n}","<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/products\" routerLinkActive=\"active\">Products</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav>\n\n<!-- main app container -->\n<div class=\"app-container\" [ngClass]=\"{ 'bg-light': user }\">\n    <alert></alert>\n    <router-outlet></router-outlet>\n</div>\n\n<!-- credits -->\n<div class=\"text-center mt-4\">\n    <p>\n        Inventory Management Service Assignment\n    </p>\n    <p>\n        <a href=\"https://mr-vara.github.io/\" target=\"_top\">Mr. Vara</a>\n    </p>\n</div>","/**\n * Main app module\n */\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { AppComponent } from './app.component';\nimport { AlertComponent } from './_components';\nimport { HomeComponent } from './home';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        AppRoutingModule\n    ],\n    declarations: [\n        AppComponent,\n        AlertComponent,\n        HomeComponent\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { };","import { Component } from '@angular/core';\n\nimport { User } from '@app/_models';\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {\n    user: User;\n\n    constructor(private accountService: AccountService) {\n        this.user = this.accountService.userValue;\n    }\n}","<div class=\"p-4\">\n    <div class=\"container\">\n        <h1>Hi {{user.firstName}}!</h1>\n        <p>Welcome to Inventory Management Service!</p>\n        <p><a routerLink=\"/products\">Manage Products</a></p>\n    </div>\n</div>","export * from './home.component';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: '/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"]}